// Copyright 2025 长林啊 <767425412@qq.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/clin211/miniblog-v2.git.

// Category API 定义，包含分类的请求和响应消息

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: apiserver/v1/category.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// IsActive 表示激活状态枚举
type IsActive int32

const (
	// 禁用状态
	IsActive_IS_ACTIVE_DISABLED IsActive = 0
	// 激活状态（默认值）
	IsActive_IS_ACTIVE_ACTIVE IsActive = 1
)

// Enum value maps for IsActive.
var (
	IsActive_name = map[int32]string{
		0: "IS_ACTIVE_DISABLED",
		1: "IS_ACTIVE_ACTIVE",
	}
	IsActive_value = map[string]int32{
		"IS_ACTIVE_DISABLED": 0,
		"IS_ACTIVE_ACTIVE":   1,
	}
)

func (x IsActive) Enum() *IsActive {
	p := new(IsActive)
	*p = x
	return p
}

func (x IsActive) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IsActive) Descriptor() protoreflect.EnumDescriptor {
	return file_apiserver_v1_category_proto_enumTypes[0].Descriptor()
}

func (IsActive) Type() protoreflect.EnumType {
	return &file_apiserver_v1_category_proto_enumTypes[0]
}

func (x IsActive) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IsActive.Descriptor instead.
func (IsActive) EnumDescriptor() ([]byte, []int) {
	return file_apiserver_v1_category_proto_rawDescGZIP(), []int{0}
}

// Category 表示文章分类
type Category struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// id 表示分类 ID
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// categoryID 表示分类 ID
	CategoryID string `protobuf:"bytes,2,opt,name=categoryID,proto3" json:"categoryID,omitempty"`
	// name 表示分类名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// description 表示分类描述
	Description *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// icon 表示分类图标
	Icon string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	// theme 表示分类主题
	Theme string `protobuf:"bytes,6,opt,name=theme,proto3" json:"theme,omitempty"`
	// parentID 表示父分类ID，0表示顶级分类
	ParentID int32 `protobuf:"varint,7,opt,name=parentID,proto3" json:"parentID,omitempty"`
	// sortOrder 表示排序值
	SortOrder int32 `protobuf:"varint,8,opt,name=sortOrder,proto3" json:"sortOrder,omitempty"`
	// isActive 表示是否激活
	IsActive IsActive `protobuf:"varint,9,opt,name=isActive,proto3,enum=v1.IsActive" json:"isActive,omitempty"`
	// createdAt 表示创建时间（Unix 时间戳）
	CreatedAt int64 `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// updatedAt 表示最后更新时间（Unix 时间戳）
	UpdatedAt     int64 `protobuf:"varint,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Category) Reset() {
	*x = Category{}
	mi := &file_apiserver_v1_category_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_category_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_category_proto_rawDescGZIP(), []int{0}
}

func (x *Category) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Category) GetCategoryID() string {
	if x != nil {
		return x.CategoryID
	}
	return ""
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Category) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Category) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *Category) GetParentID() int32 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *Category) GetSortOrder() int32 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

func (x *Category) GetIsActive() IsActive {
	if x != nil {
		return x.IsActive
	}
	return IsActive_IS_ACTIVE_DISABLED
}

func (x *Category) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Category) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// CreateCategoryRequest 表示创建分类请求
type CreateCategoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name 表示分类名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// description 表示分类描述
	Description *string `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// icon 表示分类图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	// theme 表示分类主题
	Theme string `protobuf:"bytes,4,opt,name=theme,proto3" json:"theme,omitempty"`
	// parentID 表示父分类ID
	ParentID *int32 `protobuf:"varint,5,opt,name=parentID,proto3,oneof" json:"parentID,omitempty"`
	// sortOrder 表示排序值
	SortOrder *int32 `protobuf:"varint,6,opt,name=sortOrder,proto3,oneof" json:"sortOrder,omitempty"`
	// isActive 表示是否激活
	IsActive      *IsActive `protobuf:"varint,7,opt,name=isActive,proto3,enum=v1.IsActive,oneof" json:"isActive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCategoryRequest) Reset() {
	*x = CreateCategoryRequest{}
	mi := &file_apiserver_v1_category_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCategoryRequest) ProtoMessage() {}

func (x *CreateCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_category_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCategoryRequest.ProtoReflect.Descriptor instead.
func (*CreateCategoryRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_category_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCategoryRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateCategoryRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *CreateCategoryRequest) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *CreateCategoryRequest) GetParentID() int32 {
	if x != nil && x.ParentID != nil {
		return *x.ParentID
	}
	return 0
}

func (x *CreateCategoryRequest) GetSortOrder() int32 {
	if x != nil && x.SortOrder != nil {
		return *x.SortOrder
	}
	return 0
}

func (x *CreateCategoryRequest) GetIsActive() IsActive {
	if x != nil && x.IsActive != nil {
		return *x.IsActive
	}
	return IsActive_IS_ACTIVE_DISABLED
}

// CreateCategoryResponse 表示创建分类响应
type CreateCategoryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// categoryID 表示创建的分类 ID
	CategoryID    string `protobuf:"bytes,1,opt,name=categoryID,proto3" json:"categoryID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCategoryResponse) Reset() {
	*x = CreateCategoryResponse{}
	mi := &file_apiserver_v1_category_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCategoryResponse) ProtoMessage() {}

func (x *CreateCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_category_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCategoryResponse.ProtoReflect.Descriptor instead.
func (*CreateCategoryResponse) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_category_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCategoryResponse) GetCategoryID() string {
	if x != nil {
		return x.CategoryID
	}
	return ""
}

// UpdateCategoryRequest 表示更新分类请求
type UpdateCategoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// categoryID 表示要更新的分类 ID
	// @gotags: uri:"categoryID"
	CategoryID string `protobuf:"bytes,1,opt,name=categoryID,proto3" json:"categoryID,omitempty" uri:"categoryID"`
	// name 表示可选的分类名称
	Name *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// description 表示可选的分类描述
	Description *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// icon 表示可选的分类图标
	Icon *string `protobuf:"bytes,4,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	// theme 表示可选的分类主题
	Theme *string `protobuf:"bytes,5,opt,name=theme,proto3,oneof" json:"theme,omitempty"`
	// parentID 表示可选的父分类ID
	ParentID *int32 `protobuf:"varint,6,opt,name=parentID,proto3,oneof" json:"parentID,omitempty"`
	// sortOrder 表示可选的排序值
	SortOrder *int32 `protobuf:"varint,7,opt,name=sortOrder,proto3,oneof" json:"sortOrder,omitempty"`
	// isActive 表示可选的激活状态
	IsActive      *IsActive `protobuf:"varint,8,opt,name=isActive,proto3,enum=v1.IsActive,oneof" json:"isActive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCategoryRequest) Reset() {
	*x = UpdateCategoryRequest{}
	mi := &file_apiserver_v1_category_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCategoryRequest) ProtoMessage() {}

func (x *UpdateCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_category_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateCategoryRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_category_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateCategoryRequest) GetCategoryID() string {
	if x != nil {
		return x.CategoryID
	}
	return ""
}

func (x *UpdateCategoryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateCategoryRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateCategoryRequest) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *UpdateCategoryRequest) GetTheme() string {
	if x != nil && x.Theme != nil {
		return *x.Theme
	}
	return ""
}

func (x *UpdateCategoryRequest) GetParentID() int32 {
	if x != nil && x.ParentID != nil {
		return *x.ParentID
	}
	return 0
}

func (x *UpdateCategoryRequest) GetSortOrder() int32 {
	if x != nil && x.SortOrder != nil {
		return *x.SortOrder
	}
	return 0
}

func (x *UpdateCategoryRequest) GetIsActive() IsActive {
	if x != nil && x.IsActive != nil {
		return *x.IsActive
	}
	return IsActive_IS_ACTIVE_DISABLED
}

// UpdateCategoryResponse 表示更新分类响应
type UpdateCategoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCategoryResponse) Reset() {
	*x = UpdateCategoryResponse{}
	mi := &file_apiserver_v1_category_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCategoryResponse) ProtoMessage() {}

func (x *UpdateCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_category_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCategoryResponse.ProtoReflect.Descriptor instead.
func (*UpdateCategoryResponse) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_category_proto_rawDescGZIP(), []int{4}
}

// DeleteCategoryRequest 表示删除分类请求
type DeleteCategoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// categoryID 表示要删除的分类 ID
	// @gotags: uri:"categoryID"
	CategoryID    string `protobuf:"bytes,1,opt,name=categoryID,proto3" json:"categoryID,omitempty" uri:"categoryID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCategoryRequest) Reset() {
	*x = DeleteCategoryRequest{}
	mi := &file_apiserver_v1_category_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCategoryRequest) ProtoMessage() {}

func (x *DeleteCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_category_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCategoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteCategoryRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_category_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCategoryRequest) GetCategoryID() string {
	if x != nil {
		return x.CategoryID
	}
	return ""
}

// DeleteCategoryResponse 表示删除分类响应
type DeleteCategoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCategoryResponse) Reset() {
	*x = DeleteCategoryResponse{}
	mi := &file_apiserver_v1_category_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCategoryResponse) ProtoMessage() {}

func (x *DeleteCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_category_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCategoryResponse.ProtoReflect.Descriptor instead.
func (*DeleteCategoryResponse) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_category_proto_rawDescGZIP(), []int{6}
}

// GetCategoryRequest 表示获取分类请求
type GetCategoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// categoryID 表示要获取的分类 ID
	// @gotags: uri:"categoryID"
	CategoryID    string `protobuf:"bytes,1,opt,name=categoryID,proto3" json:"categoryID,omitempty" uri:"categoryID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCategoryRequest) Reset() {
	*x = GetCategoryRequest{}
	mi := &file_apiserver_v1_category_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryRequest) ProtoMessage() {}

func (x *GetCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_category_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryRequest.ProtoReflect.Descriptor instead.
func (*GetCategoryRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_category_proto_rawDescGZIP(), []int{7}
}

func (x *GetCategoryRequest) GetCategoryID() string {
	if x != nil {
		return x.CategoryID
	}
	return ""
}

// GetCategoryResponse 表示获取分类响应
type GetCategoryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// category 表示返回的分类信息
	Category      *Category `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCategoryResponse) Reset() {
	*x = GetCategoryResponse{}
	mi := &file_apiserver_v1_category_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCategoryResponse) ProtoMessage() {}

func (x *GetCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_category_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCategoryResponse.ProtoReflect.Descriptor instead.
func (*GetCategoryResponse) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_category_proto_rawDescGZIP(), []int{8}
}

func (x *GetCategoryResponse) GetCategory() *Category {
	if x != nil {
		return x.Category
	}
	return nil
}

// ListCategoryRequest 表示获取分类列表请求
type ListCategoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// parentID 表示可选的父分类ID过滤
	ParentID      *int32 `protobuf:"varint,1,opt,name=parentID,proto3,oneof" json:"parentID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCategoryRequest) Reset() {
	*x = ListCategoryRequest{}
	mi := &file_apiserver_v1_category_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCategoryRequest) ProtoMessage() {}

func (x *ListCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_category_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCategoryRequest.ProtoReflect.Descriptor instead.
func (*ListCategoryRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_category_proto_rawDescGZIP(), []int{9}
}

func (x *ListCategoryRequest) GetParentID() int32 {
	if x != nil && x.ParentID != nil {
		return *x.ParentID
	}
	return 0
}

// ListCategoryResponse 表示获取分类列表响应
type ListCategoryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Total int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// categories 表示分类列表
	Categories    []*ListCategoryResponse_Categories `protobuf:"bytes,2,rep,name=categories,proto3" json:"categories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCategoryResponse) Reset() {
	*x = ListCategoryResponse{}
	mi := &file_apiserver_v1_category_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCategoryResponse) ProtoMessage() {}

func (x *ListCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_category_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCategoryResponse.ProtoReflect.Descriptor instead.
func (*ListCategoryResponse) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_category_proto_rawDescGZIP(), []int{10}
}

func (x *ListCategoryResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListCategoryResponse) GetCategories() []*ListCategoryResponse_Categories {
	if x != nil {
		return x.Categories
	}
	return nil
}

type ListCategoryResponse_Categories struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// id 表示分类 ID
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// categoryID 表示分类 ID
	CategoryID string `protobuf:"bytes,2,opt,name=categoryID,proto3" json:"categoryID,omitempty"`
	// name 表示分类名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// description 表示分类描述
	Description *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// icon 表示分类图标
	Icon string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	// theme 表示分类主题
	Theme string `protobuf:"bytes,6,opt,name=theme,proto3" json:"theme,omitempty"`
	// parentID 表示父分类ID，0表示顶级分类
	ParentID int32 `protobuf:"varint,7,opt,name=parentID,proto3" json:"parentID,omitempty"`
	// sortOrder 表示排序值
	SortOrder int32 `protobuf:"varint,8,opt,name=sortOrder,proto3" json:"sortOrder,omitempty"`
	// isActive 表示是否激活
	IsActive IsActive `protobuf:"varint,9,opt,name=isActive,proto3,enum=v1.IsActive" json:"isActive,omitempty"`
	// createdAt 表示创建时间（Unix 时间戳）
	CreatedAt int64 `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// updatedAt 表示最后更新时间（Unix 时间戳）
	UpdatedAt int64 `protobuf:"varint,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// children 表示子分类
	Children      []*Category `protobuf:"bytes,12,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCategoryResponse_Categories) Reset() {
	*x = ListCategoryResponse_Categories{}
	mi := &file_apiserver_v1_category_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCategoryResponse_Categories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCategoryResponse_Categories) ProtoMessage() {}

func (x *ListCategoryResponse_Categories) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_category_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCategoryResponse_Categories.ProtoReflect.Descriptor instead.
func (*ListCategoryResponse_Categories) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_category_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ListCategoryResponse_Categories) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListCategoryResponse_Categories) GetCategoryID() string {
	if x != nil {
		return x.CategoryID
	}
	return ""
}

func (x *ListCategoryResponse_Categories) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListCategoryResponse_Categories) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ListCategoryResponse_Categories) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ListCategoryResponse_Categories) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *ListCategoryResponse_Categories) GetParentID() int32 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *ListCategoryResponse_Categories) GetSortOrder() int32 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

func (x *ListCategoryResponse_Categories) GetIsActive() IsActive {
	if x != nil {
		return x.IsActive
	}
	return IsActive_IS_ACTIVE_DISABLED
}

func (x *ListCategoryResponse_Categories) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ListCategoryResponse_Categories) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ListCategoryResponse_Categories) GetChildren() []*Category {
	if x != nil {
		return x.Children
	}
	return nil
}

var File_apiserver_v1_category_proto protoreflect.FileDescriptor

var file_apiserver_v1_category_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76,
	0x31, 0x22, 0xcf, 0x02, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68,
	0x65, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x08, 0x69,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xa7, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x65,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x48, 0x03, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x38, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x22, 0xf2, 0x02, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x44, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x68,
	0x65, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x05, 0x74, 0x68, 0x65,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x08, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x48, 0x06, 0x52, 0x08, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74,
	0x68, 0x65, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x18, 0x0a, 0x16,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x22,
	0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x22,
	0x3f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x22, 0x43, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0xef, 0x03, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x43, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x1a, 0xfb, 0x02, 0x0a, 0x0a, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6f,
	0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x28, 0x0a,
	0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x38, 0x0a, 0x08, 0x49, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x49,
	0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10,
	0x01, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6c, 0x69, 0x6e, 0x32, 0x31, 0x31, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x62, 0x6c, 0x6f, 0x67,
	0x2d, 0x76, 0x32, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_apiserver_v1_category_proto_rawDescOnce sync.Once
	file_apiserver_v1_category_proto_rawDescData = file_apiserver_v1_category_proto_rawDesc
)

func file_apiserver_v1_category_proto_rawDescGZIP() []byte {
	file_apiserver_v1_category_proto_rawDescOnce.Do(func() {
		file_apiserver_v1_category_proto_rawDescData = protoimpl.X.CompressGZIP(file_apiserver_v1_category_proto_rawDescData)
	})
	return file_apiserver_v1_category_proto_rawDescData
}

var file_apiserver_v1_category_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_apiserver_v1_category_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_apiserver_v1_category_proto_goTypes = []any{
	(IsActive)(0),                           // 0: v1.IsActive
	(*Category)(nil),                        // 1: v1.Category
	(*CreateCategoryRequest)(nil),           // 2: v1.CreateCategoryRequest
	(*CreateCategoryResponse)(nil),          // 3: v1.CreateCategoryResponse
	(*UpdateCategoryRequest)(nil),           // 4: v1.UpdateCategoryRequest
	(*UpdateCategoryResponse)(nil),          // 5: v1.UpdateCategoryResponse
	(*DeleteCategoryRequest)(nil),           // 6: v1.DeleteCategoryRequest
	(*DeleteCategoryResponse)(nil),          // 7: v1.DeleteCategoryResponse
	(*GetCategoryRequest)(nil),              // 8: v1.GetCategoryRequest
	(*GetCategoryResponse)(nil),             // 9: v1.GetCategoryResponse
	(*ListCategoryRequest)(nil),             // 10: v1.ListCategoryRequest
	(*ListCategoryResponse)(nil),            // 11: v1.ListCategoryResponse
	(*ListCategoryResponse_Categories)(nil), // 12: v1.ListCategoryResponse.Categories
}
var file_apiserver_v1_category_proto_depIdxs = []int32{
	0,  // 0: v1.Category.isActive:type_name -> v1.IsActive
	0,  // 1: v1.CreateCategoryRequest.isActive:type_name -> v1.IsActive
	0,  // 2: v1.UpdateCategoryRequest.isActive:type_name -> v1.IsActive
	1,  // 3: v1.GetCategoryResponse.category:type_name -> v1.Category
	12, // 4: v1.ListCategoryResponse.categories:type_name -> v1.ListCategoryResponse.Categories
	0,  // 5: v1.ListCategoryResponse.Categories.isActive:type_name -> v1.IsActive
	1,  // 6: v1.ListCategoryResponse.Categories.children:type_name -> v1.Category
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_apiserver_v1_category_proto_init() }
func file_apiserver_v1_category_proto_init() {
	if File_apiserver_v1_category_proto != nil {
		return
	}
	file_apiserver_v1_category_proto_msgTypes[0].OneofWrappers = []any{}
	file_apiserver_v1_category_proto_msgTypes[1].OneofWrappers = []any{}
	file_apiserver_v1_category_proto_msgTypes[3].OneofWrappers = []any{}
	file_apiserver_v1_category_proto_msgTypes[9].OneofWrappers = []any{}
	file_apiserver_v1_category_proto_msgTypes[11].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apiserver_v1_category_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_apiserver_v1_category_proto_goTypes,
		DependencyIndexes: file_apiserver_v1_category_proto_depIdxs,
		EnumInfos:         file_apiserver_v1_category_proto_enumTypes,
		MessageInfos:      file_apiserver_v1_category_proto_msgTypes,
	}.Build()
	File_apiserver_v1_category_proto = out.File
	file_apiserver_v1_category_proto_rawDesc = nil
	file_apiserver_v1_category_proto_goTypes = nil
	file_apiserver_v1_category_proto_depIdxs = nil
}
