// Copyright 2025 长林啊 <767425412@qq.com>. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file. The original repo for
// this file is https://github.com/clin211/miniblog-v2.git.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: apiserver/v1/upload_file.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MultipartMode 表示分片上传的数据路径模式。
type MultipartMode int32

const (
	MultipartMode_MULTIPART_MODE_UNSPECIFIED MultipartMode = 0
	// PROXY: 客户端上传分片到应用服务，再由服务持久化到后端存储
	MultipartMode_PROXY MultipartMode = 1
	// DIRECT: 客户端直传到 OSS（通过预签名 URL）
	MultipartMode_DIRECT MultipartMode = 2
)

// Enum value maps for MultipartMode.
var (
	MultipartMode_name = map[int32]string{
		0: "MULTIPART_MODE_UNSPECIFIED",
		1: "PROXY",
		2: "DIRECT",
	}
	MultipartMode_value = map[string]int32{
		"MULTIPART_MODE_UNSPECIFIED": 0,
		"PROXY":                      1,
		"DIRECT":                     2,
	}
)

func (x MultipartMode) Enum() *MultipartMode {
	p := new(MultipartMode)
	*p = x
	return p
}

func (x MultipartMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MultipartMode) Descriptor() protoreflect.EnumDescriptor {
	return file_apiserver_v1_upload_file_proto_enumTypes[0].Descriptor()
}

func (MultipartMode) Type() protoreflect.EnumType {
	return &file_apiserver_v1_upload_file_proto_enumTypes[0]
}

func (x MultipartMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MultipartMode.Descriptor instead.
func (MultipartMode) EnumDescriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{0}
}

// UploadedObject 为上传成功后的对象信息，单文件上传与分片合并统一返回该结构。
type UploadedObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Provider      string                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`                                                                           // local | alioss
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`                                                                                     // 对象键
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`                                                                                     // 可访问 URL（或代理/签名 URL）
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`                                                                                  // 字节数
	Mime          string                 `protobuf:"bytes,5,opt,name=mime,proto3" json:"mime,omitempty"`                                                                                   // MIME 类型
	Hash          string                 `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"`                                                                                   // 如 sha256:xxxx
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 附加元数据，如 scene
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadedObject) Reset() {
	*x = UploadedObject{}
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadedObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadedObject) ProtoMessage() {}

func (x *UploadedObject) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadedObject.ProtoReflect.Descriptor instead.
func (*UploadedObject) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{0}
}

func (x *UploadedObject) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *UploadedObject) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UploadedObject) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UploadedObject) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UploadedObject) GetMime() string {
	if x != nil {
		return x.Mime
	}
	return ""
}

func (x *UploadedObject) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *UploadedObject) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UploadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scene         string                 `protobuf:"bytes,1,opt,name=scene,proto3" json:"scene,omitempty"`       // 上传场景标签（可选）
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` // 建议文件名（可选）
	Mime          string                 `protobuf:"bytes,3,opt,name=mime,proto3" json:"mime,omitempty"`         // MIME（可选）
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`        // 文件大小（可选，服务端可校验）
	File          []byte                 `protobuf:"bytes,5,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileRequest) Reset() {
	*x = UploadFileRequest{}
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRequest) ProtoMessage() {}

func (x *UploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRequest.ProtoReflect.Descriptor instead.
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{1}
}

func (x *UploadFileRequest) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *UploadFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadFileRequest) GetMime() string {
	if x != nil {
		return x.Mime
	}
	return ""
}

func (x *UploadFileRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UploadFileRequest) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type InitMultipartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`  // 必填
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`         // 必填：用于建议分片策略与超限校验
	Mime          string                 `protobuf:"bytes,3,opt,name=mime,proto3" json:"mime,omitempty"`          // 可选
	Scene         string                 `protobuf:"bytes,4,opt,name=scene,proto3" json:"scene,omitempty"`        // 可选
	Sha256        string                 `protobuf:"bytes,5,opt,name=sha256,proto3" json:"sha256,omitempty"`      // 可选：用于内容去重与最终校验
	PartSize      int64                  `protobuf:"varint,6,opt,name=partSize,proto3" json:"partSize,omitempty"` // 可选：客户端期望的分片大小（字节）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitMultipartRequest) Reset() {
	*x = InitMultipartRequest{}
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitMultipartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitMultipartRequest) ProtoMessage() {}

func (x *InitMultipartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitMultipartRequest.ProtoReflect.Descriptor instead.
func (*InitMultipartRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{2}
}

func (x *InitMultipartRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *InitMultipartRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *InitMultipartRequest) GetMime() string {
	if x != nil {
		return x.Mime
	}
	return ""
}

func (x *InitMultipartRequest) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *InitMultipartRequest) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *InitMultipartRequest) GetPartSize() int64 {
	if x != nil {
		return x.PartSize
	}
	return 0
}

type InitMultipartResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	UploadID              string                 `protobuf:"bytes,1,opt,name=uploadID,proto3" json:"uploadID,omitempty"`                            // 会话 ID
	Key                   string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`                                      // 建议对象键
	Mode                  MultipartMode          `protobuf:"varint,3,opt,name=mode,proto3,enum=v1.MultipartMode" json:"mode,omitempty"`             // proxy | direct（由服务按配置决定）
	PartSize              int64                  `protobuf:"varint,4,opt,name=partSize,proto3" json:"partSize,omitempty"`                           // 服务端最终确定的分片大小
	PresignExpiresSeconds int64                  `protobuf:"varint,5,opt,name=presignExpiresSeconds,proto3" json:"presignExpiresSeconds,omitempty"` // 直传 URL 过期（秒），仅 direct 有意义
	Duplicated            bool                   `protobuf:"varint,6,opt,name=duplicated,proto3" json:"duplicated,omitempty"`                       // 若命中去重直接复用（则无需再上传）
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *InitMultipartResponse) Reset() {
	*x = InitMultipartResponse{}
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitMultipartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitMultipartResponse) ProtoMessage() {}

func (x *InitMultipartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitMultipartResponse.ProtoReflect.Descriptor instead.
func (*InitMultipartResponse) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{3}
}

func (x *InitMultipartResponse) GetUploadID() string {
	if x != nil {
		return x.UploadID
	}
	return ""
}

func (x *InitMultipartResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *InitMultipartResponse) GetMode() MultipartMode {
	if x != nil {
		return x.Mode
	}
	return MultipartMode_MULTIPART_MODE_UNSPECIFIED
}

func (x *InitMultipartResponse) GetPartSize() int64 {
	if x != nil {
		return x.PartSize
	}
	return 0
}

func (x *InitMultipartResponse) GetPresignExpiresSeconds() int64 {
	if x != nil {
		return x.PresignExpiresSeconds
	}
	return 0
}

func (x *InitMultipartResponse) GetDuplicated() bool {
	if x != nil {
		return x.Duplicated
	}
	return false
}

type PresignPartsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadID      string                 `protobuf:"bytes,1,opt,name=uploadID,proto3" json:"uploadID,omitempty"`
	PartNumbers   []int32                `protobuf:"varint,2,rep,packed,name=partNumbers,proto3" json:"partNumbers,omitempty"` // 需要预签名的分片号列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PresignPartsRequest) Reset() {
	*x = PresignPartsRequest{}
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PresignPartsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresignPartsRequest) ProtoMessage() {}

func (x *PresignPartsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresignPartsRequest.ProtoReflect.Descriptor instead.
func (*PresignPartsRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{4}
}

func (x *PresignPartsRequest) GetUploadID() string {
	if x != nil {
		return x.UploadID
	}
	return ""
}

func (x *PresignPartsRequest) GetPartNumbers() []int32 {
	if x != nil {
		return x.PartNumbers
	}
	return nil
}

type PresignedPart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartNumber    int32                  `protobuf:"varint,1,opt,name=partNumber,proto3" json:"partNumber,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`                                                                                   // 直传 URL
	Headers       map[string]string      `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 需要附带的头
	ExpiresAt     string                 `protobuf:"bytes,4,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`                                                                       // ISO8601 到期时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PresignedPart) Reset() {
	*x = PresignedPart{}
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PresignedPart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresignedPart) ProtoMessage() {}

func (x *PresignedPart) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresignedPart.ProtoReflect.Descriptor instead.
func (*PresignedPart) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{5}
}

func (x *PresignedPart) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *PresignedPart) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PresignedPart) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *PresignedPart) GetExpiresAt() string {
	if x != nil {
		return x.ExpiresAt
	}
	return ""
}

type PresignPartsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*PresignedPart       `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PresignPartsResponse) Reset() {
	*x = PresignPartsResponse{}
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PresignPartsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresignPartsResponse) ProtoMessage() {}

func (x *PresignPartsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresignPartsResponse.ProtoReflect.Descriptor instead.
func (*PresignPartsResponse) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{6}
}

func (x *PresignPartsResponse) GetItems() []*PresignedPart {
	if x != nil {
		return x.Items
	}
	return nil
}

type UploadPartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadID      string                 `protobuf:"bytes,1,opt,name=uploadID,proto3" json:"uploadID,omitempty"`      // 会话 ID
	PartNumber    int32                  `protobuf:"varint,2,opt,name=partNumber,proto3" json:"partNumber,omitempty"` // 分片号（1..maxParts）
	Content       []byte                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Checksum      string                 `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"` // 可选：分片校验（如 sha256:xxxx 或 Content-MD5）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadPartRequest) Reset() {
	*x = UploadPartRequest{}
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadPartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPartRequest) ProtoMessage() {}

func (x *UploadPartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPartRequest.ProtoReflect.Descriptor instead.
func (*UploadPartRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{7}
}

func (x *UploadPartRequest) GetUploadID() string {
	if x != nil {
		return x.UploadID
	}
	return ""
}

func (x *UploadPartRequest) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *UploadPartRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *UploadPartRequest) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type UploadPartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartNumber    int32                  `protobuf:"varint,1,opt,name=partNumber,proto3" json:"partNumber,omitempty"`
	Etag          string                 `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`         // 存储后端返回的分片标识
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`        // 实际接收字节数
	Checksum      string                 `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"` // 服务端计算或回显
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadPartResponse) Reset() {
	*x = UploadPartResponse{}
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadPartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPartResponse) ProtoMessage() {}

func (x *UploadPartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPartResponse.ProtoReflect.Descriptor instead.
func (*UploadPartResponse) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{8}
}

func (x *UploadPartResponse) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *UploadPartResponse) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *UploadPartResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UploadPartResponse) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type ListPartsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadID      string                 `protobuf:"bytes,1,opt,name=uploadID,proto3" json:"uploadID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartsRequest) Reset() {
	*x = ListPartsRequest{}
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartsRequest) ProtoMessage() {}

func (x *ListPartsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartsRequest.ProtoReflect.Descriptor instead.
func (*ListPartsRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{9}
}

func (x *ListPartsRequest) GetUploadID() string {
	if x != nil {
		return x.UploadID
	}
	return ""
}

type UploadedPart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartNumber    int32                  `protobuf:"varint,1,opt,name=partNumber,proto3" json:"partNumber,omitempty"`
	Etag          string                 `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadedPart) Reset() {
	*x = UploadedPart{}
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadedPart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadedPart) ProtoMessage() {}

func (x *UploadedPart) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadedPart.ProtoReflect.Descriptor instead.
func (*UploadedPart) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{10}
}

func (x *UploadedPart) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *UploadedPart) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *UploadedPart) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListPartsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadID      string                 `protobuf:"bytes,1,opt,name=uploadID,proto3" json:"uploadID,omitempty"`
	Parts         []*UploadedPart        `protobuf:"bytes,2,rep,name=parts,proto3" json:"parts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPartsResponse) Reset() {
	*x = ListPartsResponse{}
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPartsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPartsResponse) ProtoMessage() {}

func (x *ListPartsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPartsResponse.ProtoReflect.Descriptor instead.
func (*ListPartsResponse) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{11}
}

func (x *ListPartsResponse) GetUploadID() string {
	if x != nil {
		return x.UploadID
	}
	return ""
}

func (x *ListPartsResponse) GetParts() []*UploadedPart {
	if x != nil {
		return x.Parts
	}
	return nil
}

type CompletedPart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartNumber    int32                  `protobuf:"varint,1,opt,name=partNumber,proto3" json:"partNumber,omitempty"`
	Etag          string                 `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompletedPart) Reset() {
	*x = CompletedPart{}
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompletedPart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletedPart) ProtoMessage() {}

func (x *CompletedPart) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletedPart.ProtoReflect.Descriptor instead.
func (*CompletedPart) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{12}
}

func (x *CompletedPart) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *CompletedPart) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

type CompleteMultipartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadID      string                 `protobuf:"bytes,1,opt,name=uploadID,proto3" json:"uploadID,omitempty"`
	Parts         []*CompletedPart       `protobuf:"bytes,2,rep,name=parts,proto3" json:"parts,omitempty"` // direct 模式必传 ETag
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteMultipartRequest) Reset() {
	*x = CompleteMultipartRequest{}
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteMultipartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteMultipartRequest) ProtoMessage() {}

func (x *CompleteMultipartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteMultipartRequest.ProtoReflect.Descriptor instead.
func (*CompleteMultipartRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{13}
}

func (x *CompleteMultipartRequest) GetUploadID() string {
	if x != nil {
		return x.UploadID
	}
	return ""
}

func (x *CompleteMultipartRequest) GetParts() []*CompletedPart {
	if x != nil {
		return x.Parts
	}
	return nil
}

// 完成分片上传后返回与单文件上传相同的对象信息。
type CompleteMultipartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Object        *UploadedObject        `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteMultipartResponse) Reset() {
	*x = CompleteMultipartResponse{}
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteMultipartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteMultipartResponse) ProtoMessage() {}

func (x *CompleteMultipartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteMultipartResponse.ProtoReflect.Descriptor instead.
func (*CompleteMultipartResponse) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{14}
}

func (x *CompleteMultipartResponse) GetObject() *UploadedObject {
	if x != nil {
		return x.Object
	}
	return nil
}

type AbortMultipartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadID      string                 `protobuf:"bytes,1,opt,name=uploadID,proto3" json:"uploadID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbortMultipartRequest) Reset() {
	*x = AbortMultipartRequest{}
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbortMultipartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortMultipartRequest) ProtoMessage() {}

func (x *AbortMultipartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortMultipartRequest.ProtoReflect.Descriptor instead.
func (*AbortMultipartRequest) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{15}
}

func (x *AbortMultipartRequest) GetUploadID() string {
	if x != nil {
		return x.UploadID
	}
	return ""
}

type AbortMultipartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadID      string                 `protobuf:"bytes,1,opt,name=uploadID,proto3" json:"uploadID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbortMultipartResponse) Reset() {
	*x = AbortMultipartResponse{}
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbortMultipartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortMultipartResponse) ProtoMessage() {}

func (x *AbortMultipartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiserver_v1_upload_file_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortMultipartResponse.ProtoReflect.Descriptor instead.
func (*AbortMultipartResponse) Descriptor() ([]byte, []int) {
	return file_apiserver_v1_upload_file_proto_rawDescGZIP(), []int{16}
}

func (x *AbortMultipartResponse) GetUploadID() string {
	if x != nil {
		return x.UploadID
	}
	return ""
}

var File_apiserver_v1_upload_file_proto protoreflect.FileDescriptor

const file_apiserver_v1_upload_file_proto_rawDesc = "" +
	"\n" +
	"\x1eapiserver/v1/upload_file.proto\x12\x02v1\x1a.protoc-gen-openapiv2/options/annotations.proto\"\x87\x02\n" +
	"\x0eUploadedObject\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12\x12\n" +
	"\x04mime\x18\x05 \x01(\tR\x04mime\x12\x12\n" +
	"\x04hash\x18\x06 \x01(\tR\x04hash\x12<\n" +
	"\bmetadata\x18\a \x03(\v2 .v1.UploadedObject.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x93\x01\n" +
	"\x11UploadFileRequest\x12\x14\n" +
	"\x05scene\x18\x01 \x01(\tR\x05scene\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x12\n" +
	"\x04mime\x18\x03 \x01(\tR\x04mime\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12$\n" +
	"\x04file\x18\x05 \x01(\fB\x10\x92A\r\x9a\x02\x01\a\xa2\x02\x06binaryR\x04file\"\xa4\x01\n" +
	"\x14InitMultipartRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\x12\x12\n" +
	"\x04mime\x18\x03 \x01(\tR\x04mime\x12\x14\n" +
	"\x05scene\x18\x04 \x01(\tR\x05scene\x12\x16\n" +
	"\x06sha256\x18\x05 \x01(\tR\x06sha256\x12\x1a\n" +
	"\bpartSize\x18\x06 \x01(\x03R\bpartSize\"\xde\x01\n" +
	"\x15InitMultipartResponse\x12\x1a\n" +
	"\buploadID\x18\x01 \x01(\tR\buploadID\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12%\n" +
	"\x04mode\x18\x03 \x01(\x0e2\x11.v1.MultipartModeR\x04mode\x12\x1a\n" +
	"\bpartSize\x18\x04 \x01(\x03R\bpartSize\x124\n" +
	"\x15presignExpiresSeconds\x18\x05 \x01(\x03R\x15presignExpiresSeconds\x12\x1e\n" +
	"\n" +
	"duplicated\x18\x06 \x01(\bR\n" +
	"duplicated\"S\n" +
	"\x13PresignPartsRequest\x12\x1a\n" +
	"\buploadID\x18\x01 \x01(\tR\buploadID\x12 \n" +
	"\vpartNumbers\x18\x02 \x03(\x05R\vpartNumbers\"\xd5\x01\n" +
	"\rPresignedPart\x12\x1e\n" +
	"\n" +
	"partNumber\x18\x01 \x01(\x05R\n" +
	"partNumber\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x128\n" +
	"\aheaders\x18\x03 \x03(\v2\x1e.v1.PresignedPart.HeadersEntryR\aheaders\x12\x1c\n" +
	"\texpiresAt\x18\x04 \x01(\tR\texpiresAt\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"?\n" +
	"\x14PresignPartsResponse\x12'\n" +
	"\x05items\x18\x01 \x03(\v2\x11.v1.PresignedPartR\x05items\"\x97\x01\n" +
	"\x11UploadPartRequest\x12\x1a\n" +
	"\buploadID\x18\x01 \x01(\tR\buploadID\x12\x1e\n" +
	"\n" +
	"partNumber\x18\x02 \x01(\x05R\n" +
	"partNumber\x12*\n" +
	"\acontent\x18\x03 \x01(\fB\x10\x92A\r\x9a\x02\x01\a\xa2\x02\x06binaryR\acontent\x12\x1a\n" +
	"\bchecksum\x18\x04 \x01(\tR\bchecksum\"x\n" +
	"\x12UploadPartResponse\x12\x1e\n" +
	"\n" +
	"partNumber\x18\x01 \x01(\x05R\n" +
	"partNumber\x12\x12\n" +
	"\x04etag\x18\x02 \x01(\tR\x04etag\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x1a\n" +
	"\bchecksum\x18\x04 \x01(\tR\bchecksum\".\n" +
	"\x10ListPartsRequest\x12\x1a\n" +
	"\buploadID\x18\x01 \x01(\tR\buploadID\"V\n" +
	"\fUploadedPart\x12\x1e\n" +
	"\n" +
	"partNumber\x18\x01 \x01(\x05R\n" +
	"partNumber\x12\x12\n" +
	"\x04etag\x18\x02 \x01(\tR\x04etag\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\"W\n" +
	"\x11ListPartsResponse\x12\x1a\n" +
	"\buploadID\x18\x01 \x01(\tR\buploadID\x12&\n" +
	"\x05parts\x18\x02 \x03(\v2\x10.v1.UploadedPartR\x05parts\"C\n" +
	"\rCompletedPart\x12\x1e\n" +
	"\n" +
	"partNumber\x18\x01 \x01(\x05R\n" +
	"partNumber\x12\x12\n" +
	"\x04etag\x18\x02 \x01(\tR\x04etag\"_\n" +
	"\x18CompleteMultipartRequest\x12\x1a\n" +
	"\buploadID\x18\x01 \x01(\tR\buploadID\x12'\n" +
	"\x05parts\x18\x02 \x03(\v2\x11.v1.CompletedPartR\x05parts\"G\n" +
	"\x19CompleteMultipartResponse\x12*\n" +
	"\x06object\x18\x01 \x01(\v2\x12.v1.UploadedObjectR\x06object\"3\n" +
	"\x15AbortMultipartRequest\x12\x1a\n" +
	"\buploadID\x18\x01 \x01(\tR\buploadID\"4\n" +
	"\x16AbortMultipartResponse\x12\x1a\n" +
	"\buploadID\x18\x01 \x01(\tR\buploadID*F\n" +
	"\rMultipartMode\x12\x1e\n" +
	"\x1aMULTIPART_MODE_UNSPECIFIED\x10\x00\x12\t\n" +
	"\x05PROXY\x10\x01\x12\n" +
	"\n" +
	"\x06DIRECT\x10\x02B8Z6github.com/clin211/miniblog-v2/pkg/api/apiserver/v1;v1b\x06proto3"

var (
	file_apiserver_v1_upload_file_proto_rawDescOnce sync.Once
	file_apiserver_v1_upload_file_proto_rawDescData []byte
)

func file_apiserver_v1_upload_file_proto_rawDescGZIP() []byte {
	file_apiserver_v1_upload_file_proto_rawDescOnce.Do(func() {
		file_apiserver_v1_upload_file_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_apiserver_v1_upload_file_proto_rawDesc), len(file_apiserver_v1_upload_file_proto_rawDesc)))
	})
	return file_apiserver_v1_upload_file_proto_rawDescData
}

var file_apiserver_v1_upload_file_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_apiserver_v1_upload_file_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_apiserver_v1_upload_file_proto_goTypes = []any{
	(MultipartMode)(0),                // 0: v1.MultipartMode
	(*UploadedObject)(nil),            // 1: v1.UploadedObject
	(*UploadFileRequest)(nil),         // 2: v1.UploadFileRequest
	(*InitMultipartRequest)(nil),      // 3: v1.InitMultipartRequest
	(*InitMultipartResponse)(nil),     // 4: v1.InitMultipartResponse
	(*PresignPartsRequest)(nil),       // 5: v1.PresignPartsRequest
	(*PresignedPart)(nil),             // 6: v1.PresignedPart
	(*PresignPartsResponse)(nil),      // 7: v1.PresignPartsResponse
	(*UploadPartRequest)(nil),         // 8: v1.UploadPartRequest
	(*UploadPartResponse)(nil),        // 9: v1.UploadPartResponse
	(*ListPartsRequest)(nil),          // 10: v1.ListPartsRequest
	(*UploadedPart)(nil),              // 11: v1.UploadedPart
	(*ListPartsResponse)(nil),         // 12: v1.ListPartsResponse
	(*CompletedPart)(nil),             // 13: v1.CompletedPart
	(*CompleteMultipartRequest)(nil),  // 14: v1.CompleteMultipartRequest
	(*CompleteMultipartResponse)(nil), // 15: v1.CompleteMultipartResponse
	(*AbortMultipartRequest)(nil),     // 16: v1.AbortMultipartRequest
	(*AbortMultipartResponse)(nil),    // 17: v1.AbortMultipartResponse
	nil,                               // 18: v1.UploadedObject.MetadataEntry
	nil,                               // 19: v1.PresignedPart.HeadersEntry
}
var file_apiserver_v1_upload_file_proto_depIdxs = []int32{
	18, // 0: v1.UploadedObject.metadata:type_name -> v1.UploadedObject.MetadataEntry
	0,  // 1: v1.InitMultipartResponse.mode:type_name -> v1.MultipartMode
	19, // 2: v1.PresignedPart.headers:type_name -> v1.PresignedPart.HeadersEntry
	6,  // 3: v1.PresignPartsResponse.items:type_name -> v1.PresignedPart
	11, // 4: v1.ListPartsResponse.parts:type_name -> v1.UploadedPart
	13, // 5: v1.CompleteMultipartRequest.parts:type_name -> v1.CompletedPart
	1,  // 6: v1.CompleteMultipartResponse.object:type_name -> v1.UploadedObject
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_apiserver_v1_upload_file_proto_init() }
func file_apiserver_v1_upload_file_proto_init() {
	if File_apiserver_v1_upload_file_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_apiserver_v1_upload_file_proto_rawDesc), len(file_apiserver_v1_upload_file_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_apiserver_v1_upload_file_proto_goTypes,
		DependencyIndexes: file_apiserver_v1_upload_file_proto_depIdxs,
		EnumInfos:         file_apiserver_v1_upload_file_proto_enumTypes,
		MessageInfos:      file_apiserver_v1_upload_file_proto_msgTypes,
	}.Build()
	File_apiserver_v1_upload_file_proto = out.File
	file_apiserver_v1_upload_file_proto_goTypes = nil
	file_apiserver_v1_upload_file_proto_depIdxs = nil
}
